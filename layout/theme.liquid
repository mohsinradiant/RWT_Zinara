<!doctype html>
<html class="js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link
        rel="preconnect"
        href="https://fonts.shopifycdn.com"
        crossorigin
      >
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %}
        &ndash; tagged "{{ current_tags | join: ', ' }}"
      {%- endif -%}
      {%- if current_page != 1 %}
        &ndash; Page {{ current_page -}}
      {%- endif -%}
      {%- unless page_title contains shop.name %}
        &ndash; {{ shop.name -}}
      {%- endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>

    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
            {{ settings.type_body_font | font_face: font_display: 'swap' }}
            {{ body_font_bold | font_face: font_display: 'swap' }}
            {{ body_font_italic | font_face: font_display: 'swap' }}
            {{ body_font_bold_italic | font_face: font_display: 'swap' }}
            {{ settings.type_header_font | font_face: font_display: 'swap' }}

            {% for scheme in settings.color_schemes -%}
              {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
              {% if forloop.index == 1 -%}
                :root,
              {%- endif %}
              .color-{{ scheme.id }} {
                --color-background: {{ scheme.settings.background.red }},
                {{ scheme.settings.background.green }},
                {{ scheme.settings.background.blue }};
                {% if scheme.settings.background_gradient != empty %}
                  --gradient-background: {{ scheme.settings.background_gradient }};
                {% else %}
                  --gradient-background: {{ scheme.settings.background }};
                {% endif %}

                {% liquid
                assign background_color = scheme.settings.background
                assign background_color_brightness = background_color | color_brightness
                if background_color_brightness <= 26
                  assign background_color_contrast = background_color | color_lighten: 50
                elsif background_color_brightness <= 65
                  assign background_color_contrast = background_color | color_lighten: 5
                else
                  assign background_color_contrast = background_color | color_darken: 25
                endif
      %}

                --color-foreground: {{ scheme.settings.text.red }},
                {{ scheme.settings.text.green }},
                {{ scheme.settings.text.blue }};
                --color-background-contrast: {{ background_color_contrast.red }},
                {{ background_color_contrast.green }},
                {{ background_color_contrast.blue }};
                --color-shadow: {{ scheme.settings.shadow.red }},
                {{ scheme.settings.shadow.green }},
                {{ scheme.settings.shadow.blue }};
                --color-button: {{ scheme.settings.button.red }},
                {{ scheme.settings.button.green }},
                {{ scheme.settings.button.blue }};
                --color-button-text: {{ scheme.settings.button_label.red }},
                {{ scheme.settings.button_label.green }},
                {{ scheme.settings.button_label.blue }};
                --color-secondary-button: {{ scheme.settings.background.red }},
                {{ scheme.settings.background.green }},
                {{ scheme.settings.background.blue }};
                --color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }},
                {{ scheme.settings.secondary_button_label.green }},
                {{ scheme.settings.secondary_button_label.blue }};
                --color-link: {{ scheme.settings.secondary_button_label.red }},
                {{ scheme.settings.secondary_button_label.green }},
                {{ scheme.settings.secondary_button_label.blue }};
                --color-badge-foreground: {{ scheme.settings.text.red }},
                {{ scheme.settings.text.green }},
                {{ scheme.settings.text.blue }};
                --color-badge-background: {{ scheme.settings.background.red }},
                {{ scheme.settings.background.green }},
                {{ scheme.settings.background.blue }};
                --color-badge-border: {{ scheme.settings.text.red }},
                {{ scheme.settings.text.green }},
                {{ scheme.settings.text.blue }};
                --payment-terms-background-color: rgb({{ scheme.settings.background.rgb }});
              }
            {% endfor %}

            {{ scheme_classes | prepend: 'body' }} {
              color: rgba(var(--color-foreground), 0.75);
              background-color: rgb(var(--color-background));
            }

            :root {
              --font-body-family: {{ settings.type_body_font.family }},
              {{ settings.type_body_font.fallback_families }};
              --font-body-style: {{ settings.type_body_font.style }};
              --font-body-weight: {{ settings.type_body_font.weight }};
              --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

              --font-heading-family: {{ settings.type_header_font.family }},
              {{ settings.type_header_font.fallback_families }};
              --font-heading-style: {{ settings.type_header_font.style }};
              --font-heading-weight: {{ settings.type_header_font.weight }};

              --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
              --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

              --media-padding: {{ settings.media_padding }}px;
              --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
              --media-border-width: {{ settings.media_border_thickness }}px;
              --media-radius: {{ settings.media_radius }}px;
              --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
              --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
              --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
              --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
              --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

            --page-width: {{ settings.page_width | divided_by: 10 }}rem;
            --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

          --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
          --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
          --product-card-text-alignment: {{ settings.card_text_alignment }};
          --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
          --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
          --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
          --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

        --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
        --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
        --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
        --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
        --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
        --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
        --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

        --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
        --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
        --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
        --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
        --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
        --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
        --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

        --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

        --popup-border-width: {{ settings.popup_border_thickness }}px;
        --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
        --popup-corner-radius: {{ settings.popup_corner_radius }}px;
        --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
        --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
        --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
        --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

        --drawer-border-width: {{ settings.drawer_border_thickness }}px;
        --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
        --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
        --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
        --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
        --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

        --spacing-sections-desktop: {{ settings.spacing_sections }}px;
        --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}
      {% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}
      {% endif %}px;

        --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
        --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
        --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
        --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

        --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
        --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
        --text-boxes-radius: {{ settings.text_boxes_radius }}px;
        --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
        --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
        --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
        --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}
      {% else %}0{% endif %}px;
        --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}
      {% else %}0{% endif %}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}
      {% else %}0{% endif %}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
        --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}
      {% else %}0{% endif %}px;

        --variant-pills-radius: {{ settings.variant_pills_radius }}px;
        --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
        --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
        --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
        --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'custom.css' | asset_url | stylesheet_tag }}

    <link
      rel="stylesheet"
      href="{{ 'component-cart-items.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >

    {%- if settings.cart_type == 'drawer' -%}
      {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
      {{ 'component-cart.css' | asset_url | stylesheet_tag }}
      {{ 'component-totals.css' | asset_url | stylesheet_tag }}
      {{ 'component-price.css' | asset_url | stylesheet_tag }}
      {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
    {%- endif -%}

    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link
        rel="preload"
        as="font"
        href="{{ settings.type_body_font | font_url }}"
        type="font/woff2"
        crossorigin
      >
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link
        rel="preload"
        as="font"
        href="{{ settings.type_header_font | font_url }}"
        type="font/woff2"
        crossorigin
      >
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}

    {%- if localization.available_countries.size > 1 or localization.available_languages.size > 1 -%}
      {{ 'component-localization-form.css' | asset_url | stylesheet_tag: preload: true }}
      <script src="{{ 'localization-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap"
      rel="stylesheet"
    >
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  </head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    {% sections 'header-group' %}
    {% render 'breadcrumbs' %}
    <main
      id="MainContent"
      class="content-for-layout focus-none"
      role="main"
      tabindex="-1"
    >
      {{ content_for_layout }}
      <div id="tryAtHomeOverlay_2" class="try-at-home-overlay" style="display: none;">
        <div id="tryAtHomePincodePopup_2" class="try-at-home-pincode-popup">
          <button id="tryAtHomeClose_2" class="try-at-home-close-btn">&times;</button>
          <h3 class="try-at-home-title">Enter pincode to check availability</h3>
          <p class="pincode_check_popup_content">{{ settings.try_at_home_text }}</p>
          <input
            id="tryAtHomeZipcode_2"
            type="text"
            class="try-at-home-pincode-input"
            placeholder="Pincode"
            maxlength="6"
          >
          <button
            id="tryAtHomeSubmitBtn_2"
            type="submit"
            class="try-at-home-pincode-button"
          >
            Check Availability
          </button>
          <div id="tryAtHomeRes_2" class="try-at-home-pincode-result"></div>
        </div>
      </div>
      <style>
        /* Overlay and background blur */
        .try-at-home-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          background: rgba(0, 0, 0, 0.4);
          backdrop-filter: blur(8px);
          display: none;
          justify-content: center;
          align-items: center;
          z-index: 1000;
        }

        /* Popup container */
        .try-at-home-pincode-popup {
          position: relative;
          background: #f4eeeb;
          padding: 30px 15px;
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
          text-align: center;
          max-width: 415px;
          width: 90%;
        }

        /* Close button */
        .try-at-home-close-btn {
          position: absolute;
          top: 37px;
          right: 10px;
          background: none;
          border: none;
          font-size: 4rem;
          cursor: pointer;
          font-weight: 500;
          font-family: 'Quicksand';
          line-height: 0;
          color: #712242;
        }

        /* Title */
        .try-at-home-title {
          font-size: 2rem;
          margin: 0;
          font-weight: 500;
          font-family: 'Playfair Display';
          text-align: left;
        }

        /* Input field */
        .try-at-home-pincode-input {
          border: none;
          color: #712242;
          font-size: 1.6rem;
          letter-spacing: 0;
          font-family: 'Quicksand';
          font-weight: 600;
          width: 100%;
          margin: 19px 0;
          padding: 9px;
          background: transparent;
          border-bottom: solid 1px #71224230;
        }

        /* Remove up and down arrows from number inputs */
        .try-at-home-pincode-input[type='text']::-webkit-inner-spin-button,
        .try-at-home-pincode-input[type='text']::-webkit-outer-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
        .try-at-home-pincode-input[type='text'] {
          -moz-appearance: textfield; /* For Firefox */
        }

        .try-at-home-pincode-input::placeholder {
          color: #71224280;
          font-size: 1.6rem;
        }

        /* Submit button */
        .try-at-home-pincode-button {
          background: #712242;
          color: #fff;
          padding: 10px 20px;
          border: none;
          border-radius: 4px;
          font-size: 1.6rem;
          cursor: pointer;
          width: 100%;
          font-family: 'Quicksand';
          font-weight: 600;
        }

        .try-at-home-pincode-button:hover {
          background: #71224260;
        }

        /* Result messages */
        .try-at-home-pincode-result {
          margin-top: 10px;
          font-size: 14px;
        }

        .try-at-home-pincode-result.invalid {
          color: red;
        }

        .try-at-home-pincode-result.available {
          color: green;
        }

        .try-at-home-pincode-result.unavailable {
          color: orange;
        }
      </style>
      <script>
        document.addEventListener('DOMContentLoaded', () => {
          const overlay = document.getElementById('tryAtHomeOverlay_2');
          const pincodePopup = document.getElementById('tryAtHomePincodePopup_2');
          const closeButton = document.getElementById('tryAtHomeClose_2');
          const submitButton = document.getElementById('tryAtHomeSubmitBtn_2');
          const zipcodeInput = document.getElementById('tryAtHomeZipcode_2');
          const res = document.getElementById('tryAtHomeRes_2');
          const inventoryElement = document.querySelector('.product__inventory');
          const productFormButtons = document.querySelector('.product-form__buttons');

          const validPincodes = [
            '110001',
            '110002',
            '110003',
            '110004',
            '110005',
            '110006',
            '110007',
            '110008',
            '110009',
            '110010',
            '110011',
            '110012',
            '110013',
            '110014',
            '110015',
            '110016',
            '110017',
            '110018',
            '110019',
            '110020',
            '110021',
            '110022',
            '110023',
            '110024',
            '110025',
            '110026',
            '110027',
            '110028',
            '110029',
            '110030',
            '110031',
            '110032',
            '110033',
            '110034',
            '110035',
            '110036',
            '110037',
            '110038',
            '110039',
            '110040',
            '110041',
            '110042',
            '110043',
            '110044',
            '110045',
            '110046',
            '110047',
            '110048',
            '110049',
            '110051',
            '110052',
            '110053',
            '110054',
            '110055',
            '110056',
            '110057',
            '110058',
            '110059',
            '110060',
            '110061',
            '110062',
            '110063',
            '110064',
            '110065',
            '110066',
            '110067',
            '110068',
            '110069',
            '110070',
            '110071',
            '110072',
            '110073',
            '110074',
            '110075',
            '110076',
            '110077',
            '110078',
            '110080',
            '110081',
            '110082',
            '110083',
            '110084',
            '110085',
            '110086',
            '110087',
            '110088',
            '110089',
            '110090',
            '110091',
            '110092',
            '110093',
            '110094',
            '110095',
            '110096',
            '110097',
            '122001',
            '122002',
            '122003',
            '122004',
            '122005',
            '122006',
            '122007',
            '122008',
            '122009',
            '122010',
            '122011',
            '122015',
            '122016',
            '122017',
            '122018',
            '122051',
            '122052',
            '122101',
            '122104',
            '122105',
            '122107',
            '122108',
            '122413',
            '122414',
            '122502',
            '122503',
            '122504',
            '122505',
            '122506',
            '122508',
            '123001',
            '123021',
            '123023',
            '123024',
            '123027',
            '123028',
            '123029',
            '123034',
            '123035',
            '123101',
            '123102',
            '123103',
            '123106',
            '123110',
            '123301',
            '123302',
            '123303',
            '123411',
            '123412',
            '123501',
            '141001',
            '141002',
            '141003',
            '141004',
            '141006',
            '141007',
            '141008',
            '141010',
            '141012',
            '141013',
            '141014',
            '141015',
            '141016',
            '141017',
            '160001',
            '160002',
            '160003',
            '160004',
            '160009',
            '160011',
            '160012',
            '160015',
            '160017',
            '160018',
            '160019',
            '160020',
            '160022',
            '160023',
            '160025',
            '160030',
            '160036',
            '160047',
            '160101',
            '160102',
            '180001',
            '180002',
            '180003',
            '180004',
            '180005',
            '180006',
            '180007',
            '180009',
            '180010',
            '201301',
            '201303',
            '201304',
            '201305',
            '201306',
            '201307',
            '201309',
            '201310',
            '226001',
            '226002',
            '226003',
            '226004',
            '226005',
            '226006',
            '226007',
            '226008',
            '226009',
            '226010',
            '226011',
            '226012',
            '226013',
            '226014',
            '226015',
            '226016',
            '226017',
            '226018',
            '226019',
            '226020',
            '226021',
            '226022',
            '226023',
            '226024',
            '226025',
            '226026',
            '226027',
            '226028',
            '226029',
            '226030',
            '226031',
            '263145',
            '282001',
            '282002',
            '282003',
            '282004',
            '282005',
            '282006',
            '282007',
            '282008',
            '282010',
            '302001',
            '302002',
            '302003',
            '302004',
            '302005',
            '302006',
            '302012',
            '302013',
            '302015',
            '302016',
            '302017',
            '302018',
            '302019',
            '302020',
            '302021',
            '302022',
            '302026',
            '302029',
            '302031',
            '302033',
            '302034',
            '302036',
            '302037',
            '302039',
            '302040',
            '380001',
            '380002',
            '380004',
            '380005',
            '380006',
            '380007',
            '380008',
            '380009',
            '380013',
            '380014',
            '380015',
            '380016',
            '380018',
            '380019',
            '380021',
            '380022',
            '380023',
            '380024',
            '380026',
            '380027',
            '380028',
            '380050',
            '380051',
            '380052',
            '380054',
            '380055',
            '380058',
            '380059',
            '380060',
            '380061',
            '380063',
            '382210',
            '382330',
            '382340',
            '382345',
            '382350',
            '382405',
            '382415',
            '382418',
            '382424',
            '382425',
            '382427',
            '382430',
            '382433',
            '382435',
            '382440',
            '382443',
            '382475',
            '382480',
            '394101',
            '394210',
            '395001',
            '395002',
            '395003',
            '395004',
            '395005',
            '395006',
            '395007',
            '395008',
            '395009',
            '395010',
            '395011',
            '395012',
            '395017',
            '400001',
            '400002',
            '400003',
            '400004',
            '400005',
            '400006',
            '400007',
            '400008',
            '400009',
            '400010',
            '400011',
            '400012',
            '400013',
            '400014',
            '400015',
            '400016',
            '400017',
            '400018',
            '400019',
            '400020',
            '400021',
            '400022',
            '400024',
            '400025',
            '400026',
            '400027',
            '400028',
            '400029',
            '400030',
            '400031',
            '400032',
            '400033',
            '400034',
            '400035',
            '400037',
            '400042',
            '400043',
            '400049',
            '400050',
            '400051',
            '400052',
            '400053',
            '400054',
            '400055',
            '400056',
            '400057',
            '400058',
            '400059',
            '400060',
            '400061',
            '400063',
            '400064',
            '400065',
            '400066',
            '400067',
            '400068',
            '400069',
            '400070',
            '400071',
            '400072',
            '400074',
            '400075',
            '400076',
            '400077',
            '400078',
            '400079',
            '400080',
            '400081',
            '400082',
            '400083',
            '400084',
            '400085',
            '400086',
            '400087',
            '400088',
            '400089',
            '400091',
            '400092',
            '400093',
            '400094',
            '400095',
            '400096',
            '400097',
            '400098',
            '400099',
            '400101',
            '400102',
            '400103',
            '400104',
            '400601',
            '400602',
            '400603',
            '400604',
            '400605',
            '400606',
            '400607',
            '400608',
            '400610',
            '400612',
            '400615',
            '400702',
            '400704',
            '400707',
            '400710',
            '401101',
            '401102',
            '401103',
            '401105',
            '401106',
            '401107',
            '401206',
            '403001',
            '403002',
            '403004',
            '403005',
            '403006',
            '403102',
            '403104',
            '403108',
            '403109',
            '403110',
            '403115',
            '403201',
            '403202',
            '403203',
            '403204',
            '403206',
            '403521',
            '410206',
            '410207',
            '410208',
            '410210',
            '410218',
            '410221',
            '411001',
            '411002',
            '411003',
            '411004',
            '411005',
            '411006',
            '411007',
            '411008',
            '411009',
            '411011',
            '411012',
            '411013',
            '411014',
            '411015',
            '411016',
            '411017',
            '411020',
            '411021',
            '411022',
            '411023',
            '411024',
            '411028',
            '411030',
            '411031',
            '411032',
            '411033',
            '411034',
            '411035',
            '411036',
            '411037',
            '411038',
            '411039',
            '411040',
            '411041',
            '411042',
            '411043',
            '411044',
            '411045',
            '411046',
            '411047',
            '411048',
            '411051',
            '411052',
            '411058',
            '411060',
            '411061',
            '411062',
            '421101',
            '421102',
            '421103',
            '421301',
            '421302',
            '421305',
            '421306',
            '421308',
            '421311',
            '421605',
            '440001',
            '440002',
            '440003',
            '440005',
            '440006',
            '440007',
            '440008',
            '440010',
            '440012',
            '440013',
            '440014',
            '440015',
            '440016',
            '440017',
            '440018',
            '440019',
            '440020',
            '440021',
            '440022',
            '440023',
            '440024',
            '440025',
            '440026',
            '440027',
            '440030',
            '440032',
            '440033',
            '440034',
            '440035',
            '440036',
            '440037',
            '452001',
            '452002',
            '452003',
            '452005',
            '452006',
            '452007',
            '452009',
            '452010',
            '452011',
            '452012',
            '452013',
            '452014',
            '452015',
            '452016',
            '452018',
            '462001',
            '462002',
            '462003',
            '462004',
            '462007',
            '462008',
            '462010',
            '462011',
            '462013',
            '462016',
            '462020',
            '462022',
            '462023',
            '462024',
            '462026',
            '462027',
            '462030',
            '462031',
            '492001',
            '492002',
            '492003',
            '492004',
            '492005',
            '492008',
            '492009',
            '492010',
            '492012',
            '492013',
            '492014',
            '492015',
            '500001',
            '500002',
            '500003',
            '500004',
            '500005',
            '500006',
            '500007',
            '500008',
            '500009',
            '500010',
            '500011',
            '500012',
            '500013',
            '500014',
            '500015',
            '500016',
            '500017',
            '500018',
            '500019',
            '500020',
            '500022',
            '500023',
            '500024',
            '500025',
            '500026',
            '500027',
            '500028',
            '500029',
            '500030',
            '500031',
            '500032',
            '500033',
            '500034',
            '500035',
            '500036',
            '500037',
            '500038',
            '500039',
            '500040',
            '500041',
            '500042',
            '500043',
            '500044',
            '500045',
            '500046',
            '500047',
            '500048',
            '500049',
            '500050',
            '500051',
            '500052',
            '500053',
            '500054',
            '500055',
            '500056',
            '500057',
            '500058',
            '500059',
            '500060',
            '500061',
            '500062',
            '500063',
            '500064',
            '500065',
            '500066',
            '500067',
            '500068',
            '500069',
            '500070',
            '500072',
            '500073',
            '500074',
            '500075',
            '500076',
            '500077',
            '500078',
            '500079',
            '500080',
            '500081',
            '500082',
            '500083',
            '500084',
            '500085',
            '500086',
            '500087',
            '500088',
            '500089',
            '500090',
            '500091',
            '500092',
            '500093',
            '500094',
            '500095',
            '500096',
            '500097',
            '500098',
            '500100',
            '500101',
            '501101',
            '501102',
            '501106',
            '501111',
            '501121',
            '501141',
            '501142',
            '501143',
            '501144',
            '501158',
            '501202',
            '501203',
            '501218',
            '501301',
            '501359',
            '501401',
            '501501',
            '501502',
            '501503',
            '501504',
            '501505',
            '501506',
            '501508',
            '501509',
            '501510',
            '501511',
            '501512',
            '520001',
            '520002',
            '520003',
            '520004',
            '520007',
            '520008',
            '520010',
            '520011',
            '520012',
            '520013',
            '520015',
            '530001',
            '530002',
            '530003',
            '530004',
            '530005',
            '530007',
            '530008',
            '530009',
            '530011',
            '530012',
            '530013',
            '530014',
            '530015',
            '530016',
            '530017',
            '530018',
            '530020',
            '530022',
            '530024',
            '530026',
            '530027',
            '530028',
            '530029',
            '530031',
            '530032',
            '530035',
            '530040',
            '530041',
            '530043',
            '530044',
            '530045',
            '530046',
            '530047',
            '530048',
            '530049',
            '530051',
            '530052',
            '530053',
            '560001',
            '560002',
            '560003',
            '560004',
            '560005',
            '560006',
            '560007',
            '560008',
            '560009',
            '560010',
            '560011',
            '560012',
            '560013',
            '560014',
            '560015',
            '560016',
            '560017',
            '560018',
            '560019',
            '560020',
            '560021',
            '560022',
            '560023',
            '560024',
            '560025',
            '560026',
            '560027',
            '560029',
            '560030',
            '560032',
            '560033',
            '560034',
            '560035',
            '560036',
            '560037',
            '560038',
            '560039',
            '560040',
            '560041',
            '560042',
            '560043',
            '560045',
            '560046',
            '560047',
            '560048',
            '560049',
            '560050',
            '560051',
            '560053',
            '560054',
            '560055',
            '560056',
            '560057',
            '560058',
            '560059',
            '560060',
            '560061',
            '560062',
            '560063',
            '560064',
            '560065',
            '560066',
            '560067',
            '560068',
            '560070',
            '560071',
            '560072',
            '560073',
            '560074',
            '560075',
            '560076',
            '560077',
            '560078',
            '560079',
            '560080',
            '560081',
            '560082',
            '560083',
            '560084',
            '560085',
            '560086',
            '560087',
            '560088',
            '560089',
            '560090',
            '560091',
            '560092',
            '560093',
            '560094',
            '560095',
            '560096',
            '560097',
            '560098',
            '560099',
            '560100',
            '560102',
            '560103',
            '560104',
            '560105',
            '560107',
            '560108',
            '560109',
            '560110',
            '560300',
            '561101',
            '561201',
            '561203',
            '561204',
            '561205',
            '562106',
            '562107',
            '562108',
            '562109',
            '562110',
            '562111',
            '562112',
            '562114',
            '562119',
            '562120',
            '562121',
            '562122',
            '562123',
            '562125',
            '562126',
            '562127',
            '562128',
            '562129',
            '562130',
            '562131',
            '562132',
            '562135',
            '562138',
            '562149',
            '562157',
            '562161',
            '562162',
            '562163',
            '575001',
            '575002',
            '575003',
            '575004',
            '575005',
            '575006',
            '575007',
            '575008',
            '575010',
            '575011',
            '575013',
            '575014',
            '575015',
            '575016',
            '575017',
            '575018',
            '575019',
            '575020',
            '600001',
            '600002',
            '600003',
            '600004',
            '600005',
            '600006',
            '600007',
            '600008',
            '600009',
            '600010',
            '600011',
            '600012',
            '600013',
            '600014',
            '600015',
            '600016',
            '600017',
            '600018',
            '600019',
            '600020',
            '600021',
            '600022',
            '600023',
            '600024',
            '600025',
            '600026',
            '600028',
            '600029',
            '600030',
            '600031',
            '600032',
            '600033',
            '600034',
            '600035',
            '600036',
            '600037',
            '600038',
            '600039',
            '600040',
            '600041',
            '600042',
            '600043',
            '600044',
            '600045',
            '600046',
            '600047',
            '600048',
            '600049',
            '600050',
            '600051',
            '600052',
            '600053',
            '600054',
            '600055',
            '600056',
            '600057',
            '600058',
            '600059',
            '600060',
            '600061',
            '600062',
            '600063',
            '600064',
            '600065',
            '600066',
            '600067',
            '600068',
            '600069',
            '600070',
            '600071',
            '600072',
            '600073',
            '600074',
            '600075',
            '600076',
            '600077',
            '600078',
            '600081',
            '600082',
            '600083',
            '600084',
            '600085',
            '600086',
            '600087',
            '600088',
            '600089',
            '600090',
            '600091',
            '600092',
            '600093',
            '600094',
            '600095',
            '600096',
            '600097',
            '600098',
            '600099',
            '600100',
            '600101',
            '600102',
            '600103',
            '600104',
            '600106',
            '600107',
            '600110',
            '600113',
            '600115',
            '600116',
            '600117',
            '600118',
            '600119',
            '600120',
            '600122',
            '600123',
            '600124',
            '600125',
            '600126',
            '600127',
            '600128',
            '600129',
            '600130',
            '601101',
            '601202',
            '601204',
            '601205',
            '601206',
            '601301',
            '603101',
            '603103',
            '603104',
            '603105',
            '603106',
            '603107',
            '603108',
            '603109',
            '603110',
            '603111',
            '603112',
            '603127',
            '603201',
            '603203',
            '603204',
            '603209',
            '603210',
            '603211',
            '603301',
            '603303',
            '603305',
            '603306',
            '603307',
            '603308',
            '603309',
            '603310',
            '603311',
            '603312',
            '603313',
            '603314',
            '603319',
            '603401',
            '603405',
            '625001',
            '625002',
            '625003',
            '625004',
            '625005',
            '625006',
            '625007',
            '625008',
            '625009',
            '625011',
            '625012',
            '625014',
            '625015',
            '625016',
            '625017',
            '625018',
            '625020',
            '635109',
            '635126',
            '636001',
            '636002',
            '636003',
            '636004',
            '636005',
            '636006',
            '636007',
            '636008',
            '636009',
            '636010',
            '636011',
            '636012',
            '636013',
            '636014',
            '636015',
            '636016',
            '636030',
            '641001',
            '641002',
            '641003',
            '641004',
            '641005',
            '641006',
            '641007',
            '641008',
            '641009',
            '641010',
            '641011',
            '641012',
            '641013',
            '641014',
            '641015',
            '641018',
            '641019',
            '641020',
            '641023',
            '641024',
            '641025',
            '641027',
            '641028',
            '641029',
            '641030',
            '641037',
            '682011',
            '682012',
            '682013',
            '682015',
            '682016',
            '682017',
            '682018',
            '682019',
            '682020',
            '682301',
            '682304',
            '682306',
            '682307',
            '682309',
            '682504',
            '682505',
            '682507',
            '682508',
            '682511',
            '683572',
            '700001',
            '700002',
            '700003',
            '700004',
            '700005',
            '700006',
            '700007',
            '700008',
            '700009',
            '700010',
            '700011',
            '700012',
            '700013',
            '700014',
            '700015',
            '700016',
            '700017',
            '700018',
            '700019',
            '700020',
            '700021',
            '700022',
            '700023',
            '700024',
            '700025',
            '700026',
            '700027',
            '700028',
            '700029',
            '700030',
            '700031',
            '700032',
            '700033',
            '700034',
            '700035',
            '700036',
            '700037',
            '700038',
            '700039',
            '700040',
            '700041',
            '700042',
            '700043',
            '700044',
            '700045',
            '700046',
            '700047',
            '700048',
            '700049',
            '700050',
            '700051',
            '700052',
            '700053',
            '700054',
            '700055',
            '700056',
            '700057',
            '700058',
            '700059',
            '700060',
            '700061',
            '700062',
            '700063',
            '700064',
            '700065',
            '700066',
            '700067',
            '700068',
            '700069',
            '700070',
            '700071',
            '700072',
            '700073',
            '700074',
            '700075',
            '700076',
            '700077',
            '700078',
            '700079',
            '700080',
            '700081',
            '700082',
            '700083',
            '700084',
            '700085',
            '700086',
            '700087',
            '700088',
            '700089',
            '700090',
            '700091',
            '700092',
            '700093',
            '700094',
            '700095',
            '700096',
            '700097',
            '700098',
            '700099',
            '700100',
            '700101',
            '700102',
            '700105',
            '700106',
            '700107',
            '700108',
            '700156',
            '700157',
            '700159',
            '711101',
            '711102',
            '711103',
            '711104',
            '711105',
            '711106',
            '711107',
            '711108',
            '711109',
            '711110',
            '711111',
            '711112',
            '711113',
            '711114',
            '711201',
            '711202',
            '711203',
            '711204',
            '711205',
            '711225',
            '711226',
            '711227',
            '711301',
            '711302',
            '711303',
            '711304',
            '711305',
            '711306',
            '711307',
            '711308',
            '711309',
            '711310',
            '711312',
            '711313',
            '711314',
            '711315',
            '711316',
            '711317',
            '711322',
            '711401',
            '711403',
            '711404',
            '711405',
            '711408',
            '711409',
            '711410',
            '711411',
            '711412',
            '711413',
            '711414',
            '712246',
            '734001',
            '734003',
            '734004',
            '734010',
            '751001',
            '751002',
            '751003',
            '751004',
            '751005',
            '751006',
            '751007',
            '751008',
            '751009',
            '751010',
            '751011',
            '751012',
            '751013',
            '751014',
            '751015',
            '751016',
            '751017',
            '751018',
            '751019',
            '751020',
            '751021',
            '751022',
            '751023',
            '751024',
            '751025',
            '751030',
            '781001',
            '781003',
            '781004',
            '781005',
            '781006',
            '781007',
            '781008',
            '781009',
            '781010',
            '781011',
            '781012',
            '781013',
            '781014',
            '781016',
            '781017',
            '781018',
            '781019',
            '781020',
            '781021',
            '781022',
            '781023',
            '781024',
            '781025',
            '781026',
            '781027',
            '781028',
            '781029',
            '781031',
            '781032',
            '781034',
            '781035',
            '781036',
            '781037',
            '781038',
            '781039',
            '781040',
            '781171',
            '800001',
            '800002',
            '800003',
            '800004',
            '800005',
            '800006',
            '800007',
            '800008',
            '800009',
            '800010',
            '800011',
            '800012',
            '800013',
            '800014',
            '800015',
            '800016',
            '800017',
            '800018',
            '800019',
            '800020',
            '800021',
            '800022',
            '800023',
            '800024',
            '800025',
            '800026',
            '800027',
            '800028',
            '800029',
            '834001',
            '834002',
            '834003',
            '110099',
            '110110',
            '122012',
            '122022',
            '122098',
            '122102',
            '201020',
            '201021',
            '201103',
            '201308',
            '201311',
            '201312',
            '201313',
            '201315',
            '201316',
            '201317',
            '201318',
            '121001',
            '121002',
            '121003',
            '121004',
            '121005',
            '121006',
            '121007',
            '121008',
            '121009',
            '121010',
            '121012',
            '121013',
            '121014',
            '121015',
            '121101',
            '201001',
            '201002',
            '201003',
            '201004',
            '201005',
            '201006',
            '201007',
            '201009',
            '201010',
            '201011',
            '201012',
            '201013',
            '201014',
            '201015',
            '201016',
            '201017',
            '201019',
            '201102',
            '201302',
            '121102',
            '121106',
            '201008',
            '201206',
            '245201',
            '245205',
            '245301',
            '121103',
            '121107',
            '201018',
            '245207',
          ]; // Example valid pincodes
          let lastClickedButton = null; // Tracks the last clicked button

          function togglePopup() {
            const tryAtHomeLinks = document.querySelectorAll(
              '.c-menu2 a[href*="experience-the-product"], .menu-drawer__navigation .menu-item #HeaderDrawer-try-at-home'
            );

            tryAtHomeLinks.forEach((link) => {
              link.addEventListener('click', (e) => {
                e.preventDefault(); // Prevent default navigation
                overlay.style.display = 'flex';
                lastClickedButton = 'try-at-home';
              });
            });

            closeButton.addEventListener('click', () => {
              overlay.style.display = 'none';
            });

            overlay.addEventListener('click', (e) => {
              if (!pincodePopup.contains(e.target)) {
                overlay.style.display = 'none';
              }
            });
          }

          function isLoggedIn() {
            return typeof customerId !== 'undefined' && customerId !== null && customerId !== '';
          }
          // Handle pincode validation and redirection
          function handlePincodeCheck() {
            submitButton.addEventListener('click', () => {
              const zipcode = zipcodeInput.value.trim();
              const pincodeRegex = /^[1-9][0-9]{5}$/;

              if (!pincodeRegex.test(zipcode)) {
                res.textContent = 'Invalid Pincode';
                res.className = 'try-at-home-pincode-result invalid';
                return;
              }

              const tryAtHomeUrl = `/pages/try-at-home?view=try-at-home&product_handle={{ product.handle }}`;
              const videoTrialUrl = `/pages/video-trial?view=video-trial&product_handle={{ product.handle }}`;

              if (!isLoggedIn()) {
                // Save the intended redirection URL based on pincode validation
                const targetUrl = validPincodes.includes(zipcode) ? tryAtHomeUrl : videoTrialUrl;

                // Construct the login URL with the correct return_to parameter
                const loginUrl = `/account/login?return_url=${encodeURIComponent(targetUrl)}`;

                // Redirect the user to the login page
                window.location.href = loginUrl;
                return;
              }

              if (validPincodes.includes(zipcode)) {
                res.textContent = 'Available';
                res.className = 'try-at-home-pincode-result available';
                window.location.href = tryAtHomeUrl;
              } else {
                res.textContent = 'Pincode Not Available';
                res.className = 'try-at-home-pincode-result unavailable';
                window.location.href = videoTrialUrl;
              }
            });
          }

          // Restrict input to numbers only
          zipcodeInput.addEventListener('input', (event) => {
            event.target.value = event.target.value.replace(/[^0-9]/g, '');
          });

          // Update button visibility based on inventory status
          function updateButtonVisibility(buttonId, showOnStock) {
            const button = document.getElementById(buttonId);

            if (inventoryElement && button) {
              const inventoryText = inventoryElement.textContent.trim().toLowerCase();

              // if (inventoryText.includes('in stock') && parseInt(inventoryText) > 0) {
              //   button.style.display = showOnStock ? 'flex' : 'none';
              // } else {
              //   button.style.display = showOnStock ? 'none' : 'flex';
              // }
            }
          }

          // Move button inside the form on larger screens
          function moveButton(buttonId) {
            const button = document.getElementById(buttonId);

            if (window.innerWidth > 756 && button && productFormButtons) {
              productFormButtons.insertAdjacentElement('afterbegin', button);
              console.log(`#${buttonId} successfully moved into .product-form__buttons`);
            }
          }

          // Observe changes in inventory to dynamically update button visibility
          function observeInventoryChanges(buttonId, showOnStock) {
            const observer = new MutationObserver(() => {
              updateButtonVisibility(buttonId, showOnStock);
            });

            if (inventoryElement) {
              observer.observe(inventoryElement, { childList: true, subtree: true });
            }
          }

          // Initialize functionality for a button
          function initializeButton(buttonId, showOnStock) {
            togglePopup(buttonId);
            updateButtonVisibility(buttonId, showOnStock);
            observeInventoryChanges(buttonId, showOnStock);

            const intervalId = setInterval(() => moveButton(buttonId), 100);

            window.addEventListener('resize', () => {
              if (window.innerWidth > 756) {
                moveButton(buttonId);
              }
            });

            // Stop moving after ensuring the button is repositioned
            setTimeout(() => clearInterval(intervalId), 3000);
          }

          // Initialize both buttons
          initializeButton('tryAtHomeButton', true);

          // Initialize common functionality
          handlePincodeCheck();
        });
      </script>
    </main>

    {% sections 'footer-group' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.quickOrderListStrings = {
        itemsAdded: `{{ 'sections.quick_order_list.items_added.other' | t: quantity: '[quantity]' }}`,
        itemAdded: `{{ 'sections.quick_order_list.items_added.one' | t: quantity: '[quantity]' }}`,
        itemsRemoved: `{{ 'sections.quick_order_list.items_removed.other' | t: quantity: '[quantity]' }}`,
        itemRemoved: `{{ 'sections.quick_order_list.items_removed.one' | t: quantity: '[quantity]' }}`,
        viewCart: `{{- 'sections.quick_order_list.view_cart' | t -}}`,
        each: `{{- 'sections.quick_order_list.each' | t: money: '[money]' }}`,
        min_error: `{{- 'sections.quick_order_list.min_error' | t: min: '[min]' }}`,
        max_error: `{{- 'sections.quick_order_list.max_error' | t: max: '[max]' }}`,
        step_error: `{{- 'sections.quick_order_list.step_error' | t: step: '[step]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
        countrySelectorSearchCount: `{{ 'localization.country_results_count' | t: count: '[count]' }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.cart_type == 'drawer' -%}
      <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const contactLink = document.querySelector('.scrollable_contact_menu_header');
        const footer = document.querySelector('.footer');

        if (contactLink && footer) {
          contactLink.addEventListener('click', (event) => {
            event.preventDefault(); // Prevent any default navigation
            footer.scrollIntoView({ behavior: 'smooth', block: 'start' });
          });
        }
      });
    </script>
    {% comment %}
      {% if template == 'product' %}
        <script>
          (function() {
            let variantIdFromURL;

            function formatMoney(amount) {
              return new Intl.NumberFormat('en-IN', { maximumFractionDigits: 0 }).format(amount);
            }

            const variantMetafields = {
              {% for variant in product.variants %}
                {{ variant.id }}:
                {% if variant.metafields.content.price_breakdown %}
                  {
                    {% for item in variant.metafields.content.price_breakdown.value %}
                      "{{ item.title }}": {
                        "selling_price": "{{ item.selling_price.value | default: 0 }}",
                        "compare_at_price": "{{ item.compare_at_price.value | default: 0 }}",
                        "subtitle_1": "{{ item.subtitle_1 | escape }}",
                        "subtitle_2": "{{ item.subtitle_2 | escape }}"
                      }
                      {% unless forloop.last %},{% endunless %}
                    {% endfor %}
                  }
                {% else %}
                  null
                {% endif %}
                {% unless forloop.last %},{% endunless %}
              {% endfor %}
            };

            console.log('Variant Metafields:', variantMetafields);

            function updatePriceBreakdown(variantId) {
              console.log("Updating price breakdown for variant ID:", variantId);

              const selectedVariantBreakdown = variantMetafields[String(variantId)];
              console.log("Selected Variant Breakdown:", selectedVariantBreakdown);

              const priceBreakdownList = document.querySelector(".price-breakdown-list");
              if (!priceBreakdownList) {
                console.error("Element '.price-breakdown-list' not found.");
                return;
              }

              priceBreakdownList.innerHTML = "";

              if (!selectedVariantBreakdown) {
                console.warn(`No price breakdown available for variant ID: ${variantId}`);
                priceBreakdownList.innerHTML = '<li>No price breakdown available for this variant.</li>';
                return;
              }

              for (const [key, value] of Object.entries(selectedVariantBreakdown)) {
                if (!value) continue;

                const listItem = document.createElement("li");
                listItem.innerHTML = `
                  <div class="price_breakdown-left_container">
                    <div class="price_breakdown-left_container_top">
                      <span>${key}</span>
                      ${
                        value.compare_at_price > 0 && value.selling_price > 0
                          ? `<span class="price_discount">${Math.round(
                              ((value.compare_at_price - value.selling_price) / value.compare_at_price) * 100
                            )}% off</span>`
                          : ""
                      }
                    </div>
                    <div class="price_breakdown-left_container_bottom">
                      <p>${value.subtitle_1 || ""}</p>
                      <p>${value.subtitle_2 || ""}</p>
                    </div>
                  </div>
                  <div class="price_breakdown-right_container">
                    ${
                      value.selling_price > 0
                        ? `<span>₹${formatMoney(value.selling_price)}</span>`
                        : ""
                    }
                    ${
                      value.compare_at_price > 0
                        ? `<span class="price_breakdown_compare_at_price">₹${formatMoney(value.compare_at_price)}</span>`
                        : ""
                    }
                  </div>
                `;
                priceBreakdownList.appendChild(listItem);
              }
            }

            function checkVariantInURL() {
              const urlParams = new URLSearchParams(window.location.search);
              variantIdFromURL = urlParams.get("variant");
              console.log("Detected variant in URL:", variantIdFromURL);

              if (variantIdFromURL) {
                updatePriceBreakdown(variantIdFromURL);
              }
            }

            function handleSelectChange(e) {
              const selectedOptionValue = e.target.value;
              console.log("Selected option value:", selectedOptionValue);

              if (selectedOptionValue) {
                const newURL = new URL(window.location);
                newURL.searchParams.set("variant", selectedOptionValue);
                window.history.pushState({ path: newURL.href }, "", newURL.href);

                checkVariantInURL();
              }
            }

            function handleVariantButtonClick(e) {
              const newVariantId = e.target.getAttribute("data-variant-id");
              console.log("Variant button clicked. New VariantId:", newVariantId);

              if (newVariantId) {
                const newURL = new URL(window.location);
                newURL.searchParams.set("variant", newVariantId);
                window.history.pushState({ path: newURL.href }, "", newURL.href);

                checkVariantInURL();
              }
            }

            function attachEventListeners() {
              document.querySelectorAll("select").forEach((selectElement) => {
                selectElement.addEventListener("change", handleSelectChange);
              });

              document.querySelectorAll("[data-variant-id]").forEach((variantButton) => {
                variantButton.addEventListener("click", handleVariantButtonClick);
              });

              window.addEventListener("popstate", () => {
                console.log("History changed, checking variant in URL...");
                checkVariantInURL();
              });
            }

            document.addEventListener("DOMContentLoaded", () => {
              console.log("Page loaded, checking variant in URL...");
              checkVariantInURL();
              attachEventListeners();
            });
          })();
        </script>
      {% endif %}
    {% endcomment %}
  </body>
</html>
