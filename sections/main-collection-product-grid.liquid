{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- unless section.settings.quick_add == 'none' -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
{%- endunless -%}

{%- if section.settings.quick_add == 'standard' -%}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.quick_add == 'bulk' -%}
  <script src="{{ 'quick-add-bulk.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quick-order-list.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}">
  {%- paginate collection.products by section.settings.products_per_page -%}
    {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
    {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
      {% comment %}
        <facet-filters-form class="facets facets-vertical-sort page-width small-hide">
                      <form class="facets-vertical-form" id="FacetSortForm">
                        <div class="facet-filters sorting caption">
                          <div class="facet-filters__field">
                            <h2 class="facet-filters__label caption-large text-body">
                              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
                            </h2>
                            <div class="select">
                              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                              <select
                                name="sort_by"
                                class="facet-filters__sort select__select caption-large"
                                id="SortBy"
                                aria-describedby="a11y-refresh-page-message"
                              >
                                {%- for option in collection.sort_options -%}
                                  <option
                                    value="{{ option.value | escape }}"
                                    {% if option.value == sort_by %}
                                      selected="selected"
                                    {% endif %}
                                  >
                                    {{ option.name | escape }}
                                  </option>
                                {%- endfor -%}
                              </select>
                              <span class="svg-wrapper">
                                {{- 'icon-caret.svg' | inline_asset_content -}}
                              </span>
                            </div>
                          </div>

                        <div class="product-count-vertical light" role="status">
                          <h2 class="product-count__text text-body">
                            <span id="ProductCountDesktop">
                              {%- if collection.results_count -%}
                                {{
                                  'templates.search.results_with_count'
                                  | t: terms: collection.terms, count: collection.results_count
                                }}
                              {%- elsif collection.products_count == collection.all_products_count -%}
                                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                              {%- else -%}
                                {{
                                  'products.facets.product_count'
                                  | t: product_count: collection.products_count, count: collection.all_products_count
                                }}
                              {%- endif -%}
                            </span>
                          </h2>
                          {%- render 'loading-spinner' -%}
                        </div>
                      </form>
                    </facet-filters-form>
      {% endcomment %}
    {%- endif -%}

    <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width--full-width{% endif %}">
      {{ 'component-facets.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside
          aria-labelledby="verticalTitle"
          class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          id="main-collection-filters"
          data-id="{{ section.id }}"
        >
          {% render 'facets',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </aside>
        <aside class="filter-aside-container" id="filter-aside">
          <button class="filter-aside-close-btn" id="filter-close">Ã—</button>

          <!-- Left Section -->
          <div class="filter-labels" id="filter-labels">
            <h2 class="filter-aside-heading">Filters</h2>
            <ul class="filter-label-list">
              {%- for filter in results.filters -%}
                <li>
                  <button
                    class="filter-label-button"
                    data-filter-id="{{ forloop.index }}"
                    role="tab"
                    {% if forloop.index == 1 %}
                      aria-selected="true"
                    {% else %}
                      aria-selected="false"
                    {% endif %}
                  >
                    {{ filter.label | escape }}
                  </button>
                </li>
              {%- endfor -%}
            </ul>
          </div>

          <!-- Right Section -->
          <div class="filter-content" id="filter-content">
            {%- for filter in results.filters -%}
              <div
                class="filter-panel"
                id="filter-panel-{{ forloop.index }}"
                role="tabpanel"
                {% if forloop.index == 1 %}
                  aria-hidden="false"
                {% else %}
                  aria-hidden="true"
                {% endif %}
              >
                {% case filter.type %}
                  {% when 'boolean', 'list' %}
                    <span class="facets__summary-label">
                      {{- filter.label | escape }}
                    </span>
                    <fieldset class="facets-wrap parent-wrap {% if filter_type == 'vertical' %} facets-wrap-vertical{% endif %}">
                      <legend class="visually-hidden">{{ filter.label | escape }}</legend>
                      {%- liquid
                        assign sorted_values = filter.values
                        if filter.operator == 'AND'
                          assign active_filter_values = filter.values | where: 'active', true
                          assign inactive_filter_values = filter.values | where: 'active', false
                          assign sorted_values = active_filter_values | concat: inactive_filter_values
                        endif
                      -%}
                      <ul
                        class="{{ visual_layout_class }}{% if filter_type == 'vertical' %} facets__list--vertical{% else %} facets__list{% endif %} list-unstyled"
                        role="list"
                      >
                        {%- for value in sorted_values -%}
                          {% liquid
                            assign input_id = 'Filter-' | append: filter.param_name | escape | append: '-' | append: forloop.index
                            assign is_disabled = false
                            if value.count == 0 and value.active == false
                              assign is_disabled = true
                            endif
                          %}
                          {%- capture label_class -%}
                                            facets__label facet-checkbox{% if is_disabled %} disabled{% endif %}{% if value.active %} active{% endif %}
                                            {%- endcapture -%}
                          {%- capture text_value -%}
                                              <span class="facet-checkbox__text" aria-hidden="true">
                                                <span class="facet-checkbox__text-label">{{- value.label | escape }}</span> ({{- value.count -}})
                                              </span>
                                              <span class="visually-hidden">
                                                {{- value.label | escape }} (
                                                {%- if value.count == 1 -%}
                                                  {{- 'products.facets.product_count_simple.one' | t: count: value.count -}}
                                                {%- else -%}
                                                  {{- 'products.facets.product_count_simple.other' | t: count: value.count -}}
                                                {%- endif -%}
                                                )
                                              </span>
                                            {%- endcapture -%}
                          <li class="list-menu__item facets__item{% if forloop.index > show_more_number and filter_type == 'vertical' %} show-more-item hidden{% endif %}">
                            {%- if presentation == 'swatch' -%}
                              <div class="{{ label_class }}">
                                <div class="swatch-input-wrapper">
                                  {% render 'swatch-input',
                                    id: input_id,
                                    type: 'checkbox',
                                    name: value.param_name,
                                    value: value.value,
                                    product_form_id: 'FacetFiltersForm',
                                    swatch: value.swatch,
                                    checked: value.active,
                                    disabled: is_disabled
                                  %}
                                </div>

                                {{ text_value }}
                              </div>
                            {%- else -%}
                              <label for="{{ input_id }}" class="{{ label_class }}">
                                <input
                                  type="checkbox"
                                  name="{{ value.param_name }}"
                                  value="{{ value.value }}"
                                  id="{{ input_id }}"
                                  {% if value.active %}
                                    checked
                                  {% endif %}
                                  {% if is_disabled %}
                                    disabled
                                  {% endif %}
                                >

                                {%- if presentation == 'image' -%}
                                  <div class="facets__image-wrapper">
                                    {%- if value.image -%}
                                      {{
                                        value.image
                                        | image_url: width: 300
                                        | image_tag: class: 'facets__image', alt: value.alt
                                      }}
                                    {%- endif -%}
                                  </div>
                                {%- else -%}
                                  {{- 'square.svg' | inline_asset_content -}}

                                  <div class="svg-wrapper">
                                    {{- 'icon-checkmark.svg' | inline_asset_content -}}
                                  </div>
                                {%- endif -%}

                                {{ text_value }}
                              </label>
                            {%- endif -%}
                          </li>
                        {%- endfor -%}
                      </ul>
                    </fieldset>

                  {% when 'price_range' %}
                    <span>{{ filter.label | escape }}</span>
                    <script
                      defer
                      src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.6.0/nouislider.min.js"
                    ></script>
                    <link
                      href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.6.0/nouislider.min.css"
                      rel="stylesheet"
                    >
                    <script>
                      document.addEventListener('DOMContentLoaded', function () {
                        const initializePriceSlider = (maxPrice) => {
                          const slider = document.getElementById('price-slider-1');
                          if (!slider || slider.noUiSlider) return;

                          const minInput = document.getElementById('slider-min-1');
                          const maxInput = document.getElementById('slider-max-1');

                          const urlParams = new URLSearchParams(window.location.search);
                          const appliedMinPrice = urlParams.get('filter.v.price.gte') || 0;
                          const appliedMaxPrice = urlParams.get('filter.v.price.lte') || maxPrice;

                          noUiSlider.create(slider, {
                            start: [Number(appliedMinPrice), Number(appliedMaxPrice)],
                            connect: true,
                            range: {
                              min: 0,
                              max: maxPrice,
                            },
                            format: {
                              to: (value) => Math.round(value),
                              from: (value) => parseFloat(value),
                            },
                          });

                          slider.noUiSlider.on('update', function (values) {
                            minInput.textContent = `â‚¹${values[0].toLocaleString('en-IN')}`;
                            maxInput.textContent = `â‚¹${values[1].toLocaleString('en-IN')}`;
                          });

                          slider.noUiSlider.on('change', function (values) {
                            const minPrice = values[0];
                            const maxPrice = values[1];
                            const newUrl = new URL(window.location.href);
                            newUrl.searchParams.set('filter.v.price.gte', minPrice);
                            newUrl.searchParams.set('filter.v.price.lte', maxPrice);
                            window.location.href = newUrl.href;
                          });
                        };

                        const fetchMaxPrice = () => {
                          const collectionHandle = '{{ collection.handle }}';
                          const productsUrl = `/collections/${collectionHandle}/products.json?limit=250`;
                          let maxPrice = 0;

                          fetch(productsUrl)
                            .then((response) => response.json())
                            .then((data) => {
                              if (data && data.products) {
                                maxPrice = Math.max(
                                  ...data.products.map((product) =>
                                    Math.max(...product.variants.map((variant) => variant.price))
                                  )
                                );
                                initializePriceSlider(maxPrice);
                              }
                            })
                            .catch((error) => {
                              console.error('Error fetching products:', error);
                              initializePriceSlider(100000); // Fallback max price
                            });
                        };

                        fetchMaxPrice();

                        document.addEventListener('click', function (e) {
                          if (e.target.classList.contains('price-button')) {
                            e.preventDefault(); // Prevent default behavior like form submission or link redirection

                            const minPrice = e.target.getAttribute('data-min');
                            const maxPrice = e.target.getAttribute('data-max');

                            // Construct the updated URL with the parameters
                            const newUrl = `${window.location.origin}${window.location.pathname}?filter.v.price.gte=${minPrice}&filter.v.price.lte=${maxPrice}`;
                            console.log('newUrl for price buttons: ' + newUrl);

                            // Redirect to the updated URL
                            window.location.href = newUrl;
                          }
                        });
                      });
                    </script>
                    <style>
                      .price-buttons {
                        display: flex;
                        flex-wrap: wrap;
                        gap: 6px;
                      }
                      .price-buttons .price-button {
                        border: none;
                        padding: 12px;
                        background: #f4eeeb;
                        color: #610c27;
                      }
                    </style>
                    <div id="price-slider-container-1">
                      <div id="price-slider-1"></div>
                      <div class="price-slider-values">
                        <span><span id="slider-min-1">0</span></span>
                        <span><span id="slider-max-1">Loading...</span></span>
                      </div>
                      <div class="price-buttons">
                        <button class="price-button" data-min="0" data-max="10000">â‚¹0 - â‚¹10,000</button>
                        <button class="price-button" data-min="10000" data-max="20000">â‚¹10,000 - â‚¹20,000</button>
                        <button class="price-button" data-min="20000" data-max="50000">â‚¹20,000 - â‚¹50,000</button>
                        <button class="price-button" data-min="50000" data-max="100000">â‚¹50,000 - â‚¹1,00,000</button>
                        <button class="price-button" data-min="100000" data-max="Infinity">â‚¹1,00,000+</button>
                      </div>
                    </div>
                {% endcase %}
              </div>
            {%- endfor -%}
          </div>

          <div class="mobile-coll-filters-bottom-buttons">
            {% comment %} <facet-remove class="active-facets__button-wrapper"> {% endcomment %}
            <a id="bottom-buton-1" href="{{ results_url }}" class="active-facets__button-remove underlined-link">
              <span>{{ 'products.facets.clear_all' | t }}</span>
            </a>
            {% comment %} </facet-remove> {% endcomment %}
            <a id="bottom-buton-2">Show Results</a>
          </div>
        </aside>
        <aside class="sort-aside-container" id="sort-aside">
          <button class="sort-aside-close-btn" id="sort-close">Ã—</button>
          <h2 class="sort-aside-heading">Sort By</h2>
          <ul class="sort-aside-list">
            {%- assign sort_by = results.sort_by | default: results.default_sort_by -%}
            {%- for option in results.sort_options -%}
              <li
                class="sort-aside-item {% if option.value == sort_by %}active{% endif %}"
                data-sort-value="{{ option.value | escape }}"
              >
                {{ option.name | escape }}
              </li>
            {%- endfor -%}
          </ul>
        </aside>
      {%- endif -%}

      <div
        class="product-grid-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        <facet-filters-form class="facets facets-vertical-sort small-hide">
          <form class="facets-vertical-form" id="FacetSortForm">
            <h1 class="collection-hero__title">
              <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}: </span>
              {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {{- collection.title | escape -}}
            </h1>
            <div class="desktop-sorting-collection facet-filters sorting caption">
              <div class="facet-filters__field">
                <div class="select">
                  {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                  <img src="https://cdn.shopify.com/s/files/1/0661/8336/4792/files/Sorting_Arrows.png?v=1744268179">
                  <select
                    name="sort_by"
                    class="facet-filters__sort select__select caption-large"
                    id="SortBy"
                    aria-describedby="a11y-refresh-page-message"
                  >
                    {%- for option in collection.sort_options -%}
                      <option
                        value="{{ option.value | escape }}"
                        {% if option.value == sort_by %}
                          selected="selected"
                        {% endif %}
                      >
                        Sort: {{ option.name | escape }}
                      </option>
                    {%- endfor -%}
                  </select>
                  <span class="svg-wrapper">
                    {{- 'icon-caret.svg' | inline_asset_content -}}
                  </span>
                </div>
              </div>
            </div>
            <script>
              document.addEventListener('DOMContentLoaded', function () {
                const sortSelect = document.getElementById('SortBy');

                if (sortSelect) {
                  sortSelect.addEventListener('change', function () {
                    const selectedSort = this.value;
                    const url = new URL(window.location.href);
                    url.searchParams.set('sort_by', selectedSort);
                    window.location.href = url.toString(); // This forces a reload
                  });
                }
              });
            </script>

            <style>
              .desktop-sorting-collection {
                display: flex;
              }
              @media (max-width: 756px) {
                .desktop-sorting-collection {
                  display: none !important;
                }
              }
            </style>
            {% comment %}
              <div class="product-count-vertical light" role="status">
                                              <h2 class="product-count__text text-body">
                                                <span id="ProductCountDesktop">
                                                  {%- if collection.results_count -%}
                                                    {{
                                                      'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count
                                                    }}
                                                  {%- elsif collection.products_count == collection.all_products_count -%}
                                                    {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                                                  {%- else -%}
                                                    {{
                                                      'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count
                                                    }}
                                                  {%- endif -%}
                                                </span>
                                              </h2>
                                              {%- render 'loading-spinner' -%}
              </div>
            {% endcomment %}
          </form>
        </facet-filters-form>
        {% comment %}
          <div class="active-facets-vertical-filter">
                          {%- unless results.filters == empty -%}
                            <h2
                              class="facets__heading facets__heading--vertical caption-large text-body"
                              id="verticalTitle"
                              tabindex="-1">
                              {{ 'products.facets.filter_by_label' | t }}
                            </h2>
                          {%- endunless -%}
                          <facet-remove class="active-facets__button-wrapper">
                            <a href="{{ results_url }}" class="active-facets__button-remove underlined-link">
                              <span>{{ 'products.facets.clear_all' | t }}</span>
                            </a>
                          </facet-remove>
          </div>
        {% endcomment %}
        {%- if collection.products.size == 0 -%}
          <div
            class="collection collection--empty page-width"
            id="product-grid"
            data-id="{{ section.id }}"
          >
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>
            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
                {% if section.settings.quick_add == 'bulk' %} collection-quick-add-bulk{% endif %}
              "
            >
              {% assign skip_card_product_styles = false %}
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li
                  class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                  {% endif %}
                >
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    skip_styles: skip_card_product_styles,
                    quick_add: section.settings.quick_add,
                    section_id: section.id
                  %}
                </li>
                {%- assign skip_card_product_styles = true -%}
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {{ 'mask-arch.svg' | inline_asset_content }}
  {%- endif -%}
</div>
{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 100,
      "step": 1,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "info": "t:sections.main-collection-product-grid.settings.quick_add.info",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        },
        {
          "value": "bulk",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_3"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
